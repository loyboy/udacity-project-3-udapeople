---

- name: "configuration play." 
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
    - os_environment:
        - key: TYPEORM_CONNECTION
          value: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
        - key: TYPEORM_ENTITIES
          value: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
        - key: TYPEORM_HOST
          value: "{{ lookup('env', 'TYPEORM_HOST')}}"
        - key: TYPEORM_PORT
          value: "{{ lookup('env', 'TYPEORM_PORT')}}"
        - key: TYPEORM_USERNAME
          value: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
        - key: TYPEORM_PASSWORD
          value: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
        - key: TYPEORM_DATABASE
          value: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
        - key: TYPEORM_MIGRATIONS
          value: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
        - key: TYPEORM_MIGRATIONS_DIR
          value: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"
  
  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:

    - name: "install python for Ansible."
      become: true
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: /home/ubuntu/myfiles
        state: directory
        mode: '0755'

    - name: customize /etc/environment
      ansible.builtin.lineinfile:
        dest: "/etc/environment"
        state: present
        regexp: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value }}"
      with_items: "{{ os_environment }}"       

  roles:
    - configure-server

  post_tasks:
    - name: Confirm if you see at least one ENV path defined
      ansible.builtin.debug:
         msg: "'{{ lookup('ansible.builtin.env', 'TYPEORM_ENTITIES') }}' is the Entities environment variable."

    - name: "Check the deploy directory is it exists"
      ansible.builtin.stat:
        path: /home/ubuntu/myfiles
      register: dir_to_check

    - name: Directory found
      ansible.builtin.debug:
        msg: "Directory is present"
      when: dir_to_check.stat.isdir is defined and dir_to_check.stat.isdir